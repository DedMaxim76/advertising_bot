from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import CallbackQuery
from aiogram.utils.markdown import hlink

from data import config
from keyboards.inline.callback_datas import balance_callback, payment_method_callback, accept_phone_callback
from keyboards.inline.withdraw_inline_menu import withdraw_inline_menu, accept_phone_inline_menu, cancel_inline_menu
from loader import dp, bot
from utils.db_api.quick_commands import user_quick_commands
from utils.db_api.schemas.users import User
from utils.misc.qiwi import Payment

Max_Withdraw = 1000
Min_Withdraw = 10
Card_Fee = 50


@dp.callback_query_handler(balance_callback.filter(event="withdraw"))
async def withdraw(call: CallbackQuery):
    await call.answer(cache_time=2)
    await call.message.edit_reply_markup()
    await call.message.answer(text="<b>–ö–∞–∫–æ–π —Å–ø–æ—Å–æ–± –≤—ã–≤–æ–¥–∞ —Ö–æ—Ç–∏—Ç–µ –≤—ã–±—Ä–∞—Ç—å?</b>\n\n"
                                   "–ö–æ–º–∏—Å—Å–∏—è –Ω–∞ qiwi - 2%\n"
                                   "–ö–æ–º–∏—Å—Å–∏—è –Ω–∞ –∫–∞—Ä—Ç—É - 2% + 50 —Ä—É–±.",
                              reply_markup=withdraw_inline_menu)


@dp.callback_query_handler(payment_method_callback.filter(method="qiwi"))
async def withdraw_qiwi(call: CallbackQuery, state: FSMContext):
    user: User = await user_quick_commands.select_user(call.from_user.id)
    await call.message.delete()
    if user.phone:
        await call.message.answer(text=f"–í—ã–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –ø–æ —ç—Ç–æ–º—É –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞ {user.phone}?",
                                  reply_markup=accept_phone_inline_menu)
        await state.set_state("waiting_for_accept_phone")
        return
    await call.message.answer(text="<b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤–∞—à–µ–≥–æ –∫–æ—à–µ–ª—å–∫–∞:</b>",
                              reply_markup=cancel_inline_menu)
    await state.set_state("waiting_for_phone_qiwi")


@dp.callback_query_handler(accept_phone_callback.filter(choice="yes"), state="waiting_for_accept_phone")
async def withdraw_phone_accept(call: CallbackQuery, state: FSMContext):
    await call.message.delete()
    await call.message.answer("–°–∫–æ–ª—å–∫–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–≤–µ—Å—Ç–∏?",
                              reply_markup=cancel_inline_menu)
    await state.set_state("waiting_for_amount_to_withdraw")


@dp.callback_query_handler(accept_phone_callback.filter(choice="no"), state="waiting_for_accept_phone")
async def withdraw_phone_cancel(call: CallbackQuery, state: FSMContext):
    await call.message.delete()
    await user_quick_commands.change_phone(call.from_user.id)
    await call.message.answer(text="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤–∞—à–µ–≥–æ –∫–æ—à–µ–ª—å–∫–∞:",
                              reply_markup=cancel_inline_menu)
    await state.set_state("waiting_for_phone_qiwi")


@dp.message_handler(state="waiting_for_phone_qiwi")
async def withdraw_phone(message: types.Message, state: FSMContext):
    phone = message.text
    await user_quick_commands.change_phone(message.from_user.id, phone)
    await message.answer("–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –±—É–¥–µ—Ç –∑–∞–∫—Ä–µ–ø–ª–µ–Ω –∑–∞ –í–∞–º–∏.")
    await message.answer("–°–∫–æ–ª—å–∫–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–≤–µ—Å—Ç–∏?",
                         reply_markup=cancel_inline_menu)
    await state.set_state("waiting_for_amount_to_withdraw")


@dp.message_handler(state="waiting_for_amount_to_withdraw")
async def withdraw_qiwi_send(message: types.Message, state: FSMContext):
    if not message.text.isdigit():
        await message.answer("–í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        await message.answer("–°–∫–æ–ª—å–∫–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–≤–µ—Å—Ç–∏?",
                             reply_markup=cancel_inline_menu)
        return
    user: User = await user_quick_commands.select_user(message.from_user.id)
    amount = float(message.text)
    amount_with_fee = amount * 0.98
    if amount > Max_Withdraw or amount < Min_Withdraw:
        await message.answer("–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–∞ –≤—ã–≤–æ–¥–∞ 10 —Ä—É–±–ª–µ–π.\n"
                             "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è 1000 —Ä—É–±–ª–µ–π.")
        await message.answer(text="–°–∫–æ–ª—å–∫–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–≤–µ—Å—Ç–∏?",
                             reply_markup=cancel_inline_menu)
        return
    if user.balance < amount:
        await message.answer("–ù–∞ –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤...")
        await state.finish()
        return
    if config.BALANCE_LIMIT < amount:
        await message.answer("–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ—Ä—ã–≤, –≤ —Ç–µ—á–µ–Ω–∏–∏ 24—Ö —á–∞—Å–æ–≤ –≤—ã —Å–º–æ–∂–µ—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞!")
        await state.finish()
        return
    answer_from_qiwi = Payment.send_to_qiwi(user.phone, amount_with_fee)
    try:
        status_transaction = answer_from_qiwi["transaction"]["state"]
    except:
        await bot.send_message(chat_id=config.ADMINS[0],
                               text=f"–£ {hlink('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', message.from_user.url)} –≤–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ\n"
                                    f"–û—à–∏–±–∫–∞: {answer_from_qiwi['message']}")
        await message.answer("–ü—Ä–∏ –≤—ã–≤–æ–¥–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–≤–æ–¥–∞.\n"
                             "–í—ã–≤–æ–¥ –≤–æ–∑–º–æ–∂–µ–Ω —Ç–æ–ª—å–∫–æ –Ω–∞ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—á—ë—Ç–∞!\n"
                             "–° –í–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.")
        await state.finish()
        return
    print(status_transaction)
    if status_transaction['code'] == "Accepted":
        await message.answer("–í—ã–≤–æ–¥ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω –≤ —Ç–µ—á–µ–Ω–∏–∏ 2 —á–∞—Å–æ–≤.\n"
                             "–í—ã–≤–æ–¥ –≤–æ–∑–º–æ–∂–µ–Ω —Ç–æ–ª—å–∫–æ –Ω–∞ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—á—ë—Ç–∞!")
        await user_quick_commands.change_balance(message.from_user.id, -amount)
        config.ADMIN_BALANCE -= amount
        config.BALANCE_LIMIT -= amount
        if user.username:
            username = user.username
        else:
            username = " - "
        await bot.send_message(chat_id=config.MAIN_CHAT_ID,
                               text=f"""‚ùóÔ∏è–ó–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–≤–æ–¥ –æ–¥–æ–±—Ä–µ–Ω–∞   ‚ùóÔ∏è

–ö –≤—ã–≤–æ–¥—É: {amount} –º–æ–Ω–µ—Ç
–ù–∏–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª—è: @{username}
id –ø–æ–ª—É—á–∞—Ç–µ–ª—è: {user.id}

–°–ø–∞—Å–∏–±–æ —á—Ç–æ –≤—ã —Å –Ω–∞–º–∏! ü•∞
""")
    await state.finish()


def get_soum_to_withdrad(amount: float, fee: float):
    finish_amount = amount * fee
    finish_amount_with_fee = finish_amount * 1.02
    return finish_amount_with_fee
